buildscript {
    ext {
        springBootVersion = '2.0.1.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'java'
    id 'jacoco'
    id 'application'
    id 'com.gradle.build-scan' version '1.13.1'
    id 'net.saliman.cobertura' version '2.3.1'
    id 'org.springframework.boot' version '2.0.1.RELEASE'
    id 'com.github.kt3k.coveralls' version '2.8.2'
}

//Default JVM arguments are applied to the run tasks and scripts
applicationDefaultJvmArgs = ["-Xms1024m", "-Xmx2048m"]
mainClassName = "com.github.meldmy.WeightedLoadBalancerApplication"


cobertura.coverageFormats = ['html', 'xml'] // coveralls plugin depends on xml format report
version = '1.0.0'
sourceCompatibility = "1.10"
targetCompatibility = "1.10"
//compileJava.options.fork = true

repositories {
    mavenCentral()
}

bootJar {
    baseName = 'weighted-sticky-load-balancer'
    version =  '0.1.0'
}


//jacoco {
//    toolVersion = "0.8.1"
//    reportsDir = file("$buildDir/customJacocoReportDir")
//}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

configurations {
    compile.exclude module: 'spring-boot-starter-tomcat'
    compile.exclude group: 'org.apache.tomcat'
}

test {

    //explicitly include tests
    include 'com/github/meldmy/**'

    // listen to events in the test execution lifecycle
    beforeTest { descriptor ->
        logger.lifecycle("Running test: " + descriptor)
    }

    // Failing the 'test' task on the first test failure
    //    failFast = true

    // Listen to standard out and standard error of the test JVM(s)
    onOutput { descriptor, event ->
        logger.lifecycle("Test: " + descriptor + " produced standard out/err: " + event.message)
    }
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
        resources {
            srcDirs = ['src/main/resources']
        }
    }
    test {
        java {
            srcDirs "test/java"
        }
    }
}

dependencies {
    compile "org.jacoco:jacoco-maven-plugin:0.8.1"
    compile "org.springframework.boot:spring-boot-starter-web:$springBootVersion"
    compile "org.springframework.boot:spring-boot-starter-undertow:$springBootVersion"
    compile "com.google.guava:guava:23.0"

    testCompile "org.assertj:assertj-core:3.9.0"
    testCompile "org.springframework.boot:spring-boot-starter-test:2.0.0.RELEASE"
}

buildScan {
    termsOfServiceUrl = 'https://gradle.com/terms-of-service'
    termsOfServiceAgree = 'yes'

    publishAlways()
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.7'
}
